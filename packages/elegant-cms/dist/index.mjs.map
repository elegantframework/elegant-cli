{"version":3,"sources":["../src/components/Admin/Cms.tsx","../src/components/Admin/CmsClient.tsx","../src/components/Admin/Pages/Onboard.tsx","../node_modules/@heroicons/react/20/solid/esm/ArrowLongLeftIcon.js","../src/components/Admin/Pages/Welcome.tsx","../src/components/Admin/Pages/Login.tsx","../src/utils/Auth.ts","../auth.config.ts","../src/utils/Bcrypt.ts","../src/utils/Prisma.ts","../src/utils/Actions.ts","../src/utils/CloudFlare/R2.ts","../src/utils/CloudFlare/R2Client.ts"],"sourcesContent":["import React, { Suspense } from 'react';\r\nimport CmsClient from './CmsClient';\r\nimport { getAdminCount } from '../../utils/Actions';\r\n \r\ninterface Props {\r\n    /**\r\n     * Our database url connection string.\r\n     */\r\n    postgresUrl: string;\r\n    /**\r\n     * Our non-pooling database url connection string.\r\n     */\r\n    nonPoolingPUrl: string;\r\n    /**\r\n     * The url segments.\r\n     */\r\n    params: {  cms: string[] };\r\n};\r\n\r\nexport default async function CMS({ \r\n    postgresUrl,\r\n    nonPoolingPUrl,\r\n    params \r\n}: Props) {\r\n    // const session = await auth();\r\n    const adminCount = await getAdminCount();\r\n\r\n    console.log(adminCount)\r\n    \r\n    return(\r\n        <CmsClient \r\n            postgresUrl={postgresUrl}\r\n            nonPoolingPUrl={nonPoolingPUrl}\r\n            adminCount={adminCount}\r\n            session={null}\r\n            params={params}\r\n        />\r\n    );\r\n}","'use client'\r\nimport React from \"react\";\r\n// import Dashboard from \"./Pages/Dashboard\";\r\n// import Error from \"./Pages/Error\";\r\n// import Onboard from \"./Pages/Onboard\";\r\n// import SiteSettings from \"./Pages/SiteSettings\";\r\n// import UserSettings from \"./Pages/UserSettings\";\r\nimport { Session } from \"next-auth\";\r\nimport { useEffect, useState } from \"react\";\r\n// import Collections from \"./Pages/Collections\";\r\n// import NewCollection from \"./Pages/NewCollection\";\r\n// import DocumentList from \"./Pages/DocumentList\";\r\n// import EditDocument from \"./Pages/EditDocument\";\r\n// import { useEffect, useState } from \"react\";\r\nimport { Collection } from '../Types';\r\nimport { getAllCollections } from '../../utils/Db/Actions/Collection';\r\nimport Onboard from \"./Pages/Onboard\";\r\nimport Welcome from \"./Pages/Welcome\";\r\nimport Login from \"./Pages/Login\";\r\n\r\nexport interface CMSProps {\r\n    postgresUrl: string | undefined,\r\n    nonPoolingPUrl: string | undefined,\r\n    adminCount: number,\r\n    session: Session | null,\r\n    params: { \r\n        cms: string[]\r\n    } \r\n};\r\n\r\nexport default function CmsClient({\r\n    postgresUrl,\r\n    nonPoolingPUrl,\r\n    adminCount,\r\n    session,\r\n    params\r\n}: CMSProps) {\r\n    // const [collections, setCollections] = useState<Collection[]>();\r\n\r\n    // useEffect(() => {\r\n    //     getAllCollections().then(\r\n    //         collections => {\r\n    //             setCollections(collections)\r\n    //         }\r\n    //     );\r\n    // }, [params.cms]);\r\n\r\n    if(!postgresUrl || !nonPoolingPUrl) {\r\n        return(\r\n            <Welcome \r\n                postgresUrl={postgresUrl}\r\n                nonPoolingPUrl={nonPoolingPUrl}\r\n            />\r\n        );\r\n    }\r\n\r\n    if(adminCount === 0) {\r\n        return(\r\n            <Onboard />\r\n        );\r\n    }\r\n\r\n    if(!session) { \r\n        return(\r\n            <Login />\r\n        );\r\n    }\r\n\r\n    // if(!params.cms) {\r\n    //     return(\r\n    //         <Dashboard session={session}/>\r\n    //     );\r\n    // }\r\n\r\n    // if(params.cms[0] === \"settings\") {\r\n    //     return(\r\n    //         <SiteSettings session={session}/>\r\n    //     );\r\n    // }\r\n\r\n    // if(params.cms[0] === \"user\") {\r\n    //     return(\r\n    //         <UserSettings session={session}/>\r\n    //     );\r\n    // }\r\n\r\n    // if(params.cms[0] === \"collections\" && !params.cms[1]) {\r\n    //     return(\r\n    //         <Collections session={session}/>\r\n    //     );\r\n    // }\r\n\r\n    // if(params.cms[0] === \"collections\" && params.cms[1] === \"new\") {\r\n    //     return(\r\n    //         <NewCollection \r\n    //             session={session}\r\n    //             collections={[]}\r\n    //         />\r\n    //     );\r\n    // }\r\n\r\n    // if(collections && collections.find(e => e.title === params.cms[0]) && !params.cms[1]) {\r\n    //     return(\r\n    //         <DocumentList \r\n    //             session={session} \r\n    //             collection={params.cms[0]}\r\n    //         />\r\n    //     );\r\n    // }\r\n\r\n    // if(collections && collections.find(e => e.title === params.cms[0]) && params.cms[1]) {\r\n    //     return(\r\n    //         <EditDocument \r\n    //             session={session} \r\n    //             collection={\r\n    //                 collections.find(e => e.title === params.cms[0]) || {\r\n    //                     id: \"\",\r\n    //                     title: \"\"\r\n    //                 }\r\n    //             }\r\n    //             slug={params.cms[1]}\r\n    //         />\r\n    //     );\r\n    // }\r\n\r\n    // if(collections && !collections.find(e => e.title === params.cms[0])) {\r\n    //     return(\r\n    //         <Error />\r\n    //     );\r\n    // }\r\n}","'use client'\r\nimport React, { useEffect } from \"react\";\r\nimport { Card, ElegantLogo, MetaTitle } from '@brandonowens/elegant-ui';\r\nimport Link from \"next/link\";\r\nimport ArrowLongLeftIcon from '@heroicons/react/20/solid/ArrowLongLeftIcon';\r\nimport { createAdmin } from \"./../../../utils/Actions\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function Onboard() {\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        document.title = `Create an admin account - ${MetaTitle(process.env.NEXT_PUBLIC_APP_NAME || \"\", \"Elegant CMS\")}`;\r\n    }, []);\r\n\r\n    return(\r\n        <main className=\"relative flex h-screen flex-col items-center justify-center z-10 p-4\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <ElegantLogo className=\"w-auto h-8 mx-auto\"/>\r\n            </div>\r\n            <Card className=\"mt-10 w-full max-w-xl shadow-md p-0\">\r\n                <div className=\"bg-white w-full px-6 pt-1 pb-12 sm:px-12\">\r\n                    <h2 className=\"text-left text-2xl font-bold leading-9 tracking-tight text-slate-900 dark:text-slate-200\">\r\n                        Create an admin account\r\n                    </h2>\r\n                    <p className=\"mt-1 mb-6 text-left text-sm leading-6 text-gray-500\">\r\n                        One last step before accessing your admin panel.\r\n                    </p>\r\n                    <form \r\n                        className=\"space-y-6 text-left\"\r\n                        action={async (data: FormData) => {\r\n                            await createAdminUser(data).then((res: any) => {\r\n                                router.refresh();\r\n                            }).catch((error) => {\r\n                                console.log(error)\r\n                            });\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <label htmlFor=\"name\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                                Full name\r\n                            </label>\r\n                            <div className=\"mt-2\">\r\n                                <input\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    required\r\n                                    className=\"block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                                Email address\r\n                            </label>\r\n                            <div className=\"mt-2\">\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    required\r\n                                    className=\"block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                            Password\r\n                            </label>\r\n                            <div className=\"mt-2\">\r\n                            <input\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                required\r\n                                className=\"block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                            type=\"submit\"\r\n                            className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                            >\r\n                                Create account\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n            <div className=\"sm:mx-auto sm:w-full max-w-xl xs:pl-0 sm:pl-4 text-left mt-10 dark:text-white\">\r\n                <Link href=\"/\" className=\"hover:underline\">\r\n                    <ArrowLongLeftIcon className=\"h-6 w-6 inline mr-2\"/>Go to {process.env.NEXT_PUBLIC_APP_NAME || \"\"}\r\n                </Link>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport async function createAdminUser(formData: FormData) {\r\n    // const name = formData.get(\"name\") as string;\r\n    // const email = formData.get(\"email\") as string;\r\n    // const password = formData.get(\"password\") as string;\r\n\r\n    // return await createAdmin({\r\n    //     name: name,\r\n    //     email: email,\r\n    //     password: password\r\n    // });\r\n}","import * as React from \"react\";\nfunction ArrowLongLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a.75.75 0 0 1-.75.75H4.66l2.1 1.95a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 1 1 1.02 1.1l-2.1 1.95h12.59A.75.75 0 0 1 18 10Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ArrowLongLeftIcon);\nexport default ForwardRef;","'use client'\r\nimport React, { useEffect } from \"react\";\r\nimport { Card, ElegantLogo, MetaTitle } from '@brandonowens/elegant-ui';\r\nimport Link from \"next/link\";\r\nimport ArrowLongLeftIcon from '@heroicons/react/20/solid/ArrowLongLeftIcon';\r\n\r\nexport interface WelcomeProps {\r\n    postgresUrl: string | undefined,\r\n    nonPoolingPUrl: string | undefined\r\n};\r\n\r\nexport default function Welcome({\r\n    postgresUrl,\r\n    nonPoolingPUrl\r\n}: WelcomeProps) {\r\n\r\n    useEffect(() => {\r\n        document.title = `Welcome to Elegant CMS - ${MetaTitle(process.env.NEXT_PUBLIC_APP_NAME || \"\", \"Elegant CMS\")}`;\r\n    }, []);\r\n\r\n    return(\r\n        <main className=\"relative flex h-screen flex-col items-center justify-center z-10 p-4\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <ElegantLogo className=\"w-auto h-8 mx-auto\"/>\r\n            </div>\r\n            <Card className=\"mt-10 shadow-md\">\r\n                <div className=\"w-full border-b border-gray-200 dark:border-slate-200 pb-5 text-left -mt-[10px]\">\r\n                    <h3 className=\"text-base font-semibold leading-6 text-gray-900 dark:text-slate-200\">Welcome to Elegant CMS</h3>\r\n                </div>\r\n                <p className=\"mb-5 mt-10 text-left dark:text-slate-200\">\r\n                    Before you can access your admin area, please set the following environment variables in your `.env` file:\r\n                </p>\r\n                <ul className=\"mb-5\">\r\n                    {!postgresUrl && \r\n                        <li key={'db_url'} className=\"mb-1 text-left dark:text-slate-200\">\r\n                            {`❌`}{' '}\r\n                            <span className=\"font-semibold\">{'POSTGRES_PRISMA_URL'}</span>{' '}\r\n                            {`is not set!`}\r\n                        </li>\r\n                    }\r\n                    {!nonPoolingPUrl && \r\n                        <li key={'db_url_non_pooling'} className=\"mb-1 text-left dark:text-slate-200\">\r\n                            {`❌`}{' '}\r\n                            <span className=\"font-semibold\">{'POSTGRES_URL_NON_POOLING'}</span>{' '}\r\n                            {`is not set!`}\r\n                        </li>\r\n                    }\r\n                </ul>\r\n                <p className='w-full mb-5 mt-10 text-left dark:text-slate-200'>\r\n                    You will need to restart Next.js to apply the changes.\r\n                </p>\r\n                <p className='w-full text-left dark:text-slate-200'>\r\n                    See the <a href=\"https://www.elegantframework.com/docs/getting-started-with-elegant-cms#configuring-authentication\" className=\"hover:underline font-mono font-medium text-indigo-500 dark:text-indigo-400\" target={\"_blank\"}>documentation</a> for further help.\r\n                </p>\r\n            </Card>\r\n            <div className=\"sm:mx-auto sm:w-full max-w-2xl xs:pl-0 sm:pl-4 text-left mt-10 dark:text-white\">\r\n                <Link href=\"/\" className=\"hover:underline\">\r\n                    <ArrowLongLeftIcon className=\"h-6 w-6 inline mr-2\"/>Go to {process.env.NEXT_PUBLIC_APP_NAME || \"\"}\r\n                </Link>\r\n            </div>\r\n        </main>\r\n    );\r\n}","'use client'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, ElegantLogo, MetaTitle } from '@brandonowens/elegant-ui';\r\nimport Link from \"next/link\";\r\nimport ArrowLongLeftIcon from '@heroicons/react/20/solid/ArrowLongLeftIcon';\r\nimport { useRouter } from \"next/navigation\";\r\nimport { logUserIn } from \"./../../../utils/Actions\";\r\nimport { XCircleIcon } from \"lucide-react\";\r\n\r\nexport default function Login() {\r\n    const router = useRouter();\r\n    const [error, setError] = useState(\"\");\r\n    router.replace('/admin');\r\n\r\n    useEffect(() => {\r\n        document.title = `Log In - ${MetaTitle(process.env.NEXT_PUBLIC_APP_NAME || \"\", \"Elegant CMS\")}`;\r\n    }, []);\r\n\r\n    return(\r\n        <main className=\"relative flex h-screen flex-col items-center justify-center z-10 p-0 md:p-4\">\r\n            <div className=\"mr-3 flex-none w-[2.0625rem] overflow-hidden\">\r\n                <ElegantLogo className=\"w-auto h-8 mx-auto\"/>\r\n            </div>\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <h2 className=\"mt-6 text-center text-2xl font-bold leading-9 tracking-tight text-slate-900 dark:text-slate-200\">\r\n                    Sign in to your account\r\n                </h2>\r\n            </div>\r\n            <Card className=\"mt-10 w-full max-w-xl shadow-md p-0\">\r\n                <div className=\"w-full px-6 py-4 sm:px-12\">\r\n                    {error.length > 0 && (\r\n                        <div className=\"rounded-md bg-red-50 p-4 mb-6\">\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex-shrink-0\">\r\n                                    <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <h3 className=\"text-sm font-medium text-red-800\">\r\n                                        {error}\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <form \r\n                        className=\"space-y-6 text-left\" \r\n                        action={\r\n                            async (data: FormData) => {\r\n                                const email = data.get(\"email\") as string;\r\n                                const password = data.get(\"password\") as string;\r\n                                setError(\"\");\r\n                        \r\n                                await logUserIn({\r\n                                    email: email,\r\n                                    password: password\r\n                                }).then((res: any) => {\r\n                                    if(res.error.includes(\"Read more at \")) {\r\n                                        setError(\"Invalid email or password.\");\r\n                                    }\r\n                                    else {\r\n                                        router.refresh();\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    >\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                                Email address\r\n                            </label>\r\n                            <div className=\"mt-2\">\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    required\r\n                                    className=\"block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                                Password\r\n                            </label>\r\n                            <div className=\"mt-2\">\r\n                                <input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    required\r\n                                    className=\"block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center\"></div>\r\n                            <div className=\"text-sm leading-6\">\r\n                                {/* <a href=\"#\" className=\"font-semibold text-indigo-600 hover:text-indigo-500\">\r\n                                    Forgot password?\r\n                                </a> */}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                            >\r\n                                Sign in\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    {/* <div>\r\n                        <div className=\"relative mt-10\">\r\n                            <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\r\n                                <div className=\"w-full border-t border-gray-200\" />\r\n                            </div>\r\n                            <div className=\"relative flex justify-center text-sm font-medium leading-6\">\r\n                                <span className=\"bg-white px-6 text-gray-900\">Or continue with</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-6 grid grid-cols-2 gap-4\">\r\n                            <a\r\n                            href=\"#\"\r\n                            className=\"flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:ring-transparent\"\r\n                            >\r\n                            <svg className=\"h-5 w-5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                d=\"M12.0003 4.75C13.7703 4.75 15.3553 5.36002 16.6053 6.54998L20.0303 3.125C17.9502 1.19 15.2353 0 12.0003 0C7.31028 0 3.25527 2.69 1.28027 6.60998L5.27028 9.70498C6.21525 6.86002 8.87028 4.75 12.0003 4.75Z\"\r\n                                fill=\"#EA4335\"\r\n                                />\r\n                                <path\r\n                                d=\"M23.49 12.275C23.49 11.49 23.415 10.73 23.3 10H12V14.51H18.47C18.18 15.99 17.34 17.25 16.08 18.1L19.945 21.1C22.2 19.01 23.49 15.92 23.49 12.275Z\"\r\n                                fill=\"#4285F4\"\r\n                                />\r\n                                <path\r\n                                d=\"M5.26498 14.2949C5.02498 13.5699 4.88501 12.7999 4.88501 11.9999C4.88501 11.1999 5.01998 10.4299 5.26498 9.7049L1.275 6.60986C0.46 8.22986 0 10.0599 0 11.9999C0 13.9399 0.46 15.7699 1.28 17.3899L5.26498 14.2949Z\"\r\n                                fill=\"#FBBC05\"\r\n                                />\r\n                                <path\r\n                                d=\"M12.0004 24.0001C15.2404 24.0001 17.9654 22.935 19.9454 21.095L16.0804 18.095C15.0054 18.82 13.6204 19.245 12.0004 19.245C8.8704 19.245 6.21537 17.135 5.2654 14.29L1.27539 17.385C3.25539 21.31 7.3104 24.0001 12.0004 24.0001Z\"\r\n                                fill=\"#34A853\"\r\n                                />\r\n                            </svg>\r\n                            <span className=\"text-sm font-semibold leading-6\">Google</span>\r\n                            </a>\r\n\r\n                            <a\r\n                            href=\"#\"\r\n                            className=\"flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:ring-transparent\"\r\n                            >\r\n                            <svg className=\"h-5 w-5 fill-[#24292F]\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                                <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\r\n                                clipRule=\"evenodd\"\r\n                                />\r\n                            </svg>\r\n                            <span className=\"text-sm font-semibold leading-6\">GitHub</span>\r\n                            </a>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </Card>\r\n            <div className=\"sm:mx-auto sm:w-full max-w-xl xs:pl-0 sm:pl-4 text-left mt-10 dark:text-white\">\r\n                <Link href=\"/\" className=\"hover:underline\">\r\n                    <ArrowLongLeftIcon className=\"h-6 w-6 inline mr-2\"/>Go to {process.env.NEXT_PUBLIC_APP_NAME || \"\"}\r\n                </Link>\r\n            </div>\r\n        </main>\r\n    );\r\n}","import NextAuth from 'next-auth';\r\nimport { authConfig } from './../../auth.config';\r\nimport GitHubProvider from \"next-auth/providers/github\";\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport { z, string } from 'zod';\r\nimport { getUser } from './Actions';\r\nimport { comparePasswords } from './Bcrypt';\r\n \r\nexport const { handlers, auth, signIn, signOut } = NextAuth({\r\n  ...authConfig,\r\n  providers: [\r\n    GitHubProvider({\r\n      clientId: process.env.AUTH_GITHUB_ID as string,\r\n      clientSecret: process.env.AUTH_GITHUB_SECRET as string,\r\n      profile(profile) {\r\n        return {\r\n          id: profile.id.toString(),\r\n          name: profile.name || profile.login,\r\n          gh_username: profile.login,\r\n          email: profile.email,\r\n          image: profile.avatar_url,\r\n        };\r\n      },\r\n    }),\r\n    Credentials({\r\n      credentials: {\r\n        email: {\r\n        },\r\n        password: {},\r\n      },\r\n      authorize: async (credentials): Promise<any> => {\r\n        const parsedCredentials = z\r\n        .object({\r\n          email: string({ required_error: \"Email is required\" })\r\n          .min(1, \"Email is required\")\r\n          .email(\"Invalid email\"),\r\n        password: string({ required_error: \"Password is required\" })\r\n          .min(1, \"Password is required\")\r\n          .min(6, \"Password must be more than 6 characters\")\r\n          .max(32, \"Password must be less than 32 characters\"),\r\n        })\r\n        .safeParse(credentials);\r\n\r\n        if (parsedCredentials.success) {\r\n          const { email, password } = parsedCredentials.data;\r\n          const user = await getUser(email);\r\n\r\n          if (!user) {\r\n            return null;\r\n          };\r\n\r\n          // @ts-expect-error\r\n          const passwordsMatch = comparePasswords(password, user.password);\r\n\r\n          if(!passwordsMatch) {\r\n            throw new Error(\"User not found.\");\r\n          }\r\n\r\n          if (passwordsMatch) {\r\n            return {\r\n              id: user.id,\r\n              name: user.name,\r\n              email: user.email,\r\n              image: user.image\r\n            };\r\n          };\r\n        }\r\n\r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n});","import type { NextAuthConfig } from 'next-auth';\r\n\r\nexport const authConfig = {\r\n    pages: {\r\n        signIn: `/admin`,\r\n        verifyRequest: `/admin`,\r\n        error: \"/admin\",\r\n    },\r\n    session: { strategy: \"jwt\" },\r\n    providers: [],\r\n    callbacks: {\r\n        jwt({ token, user }) {\r\n            if (user) { // User is available during sign-in\r\n              token.id = user.id\r\n            }\r\n            return token\r\n        },\r\n        session({ session, token }) {\r\n            // @ts-expect-error\r\n            session.user.id = token.id\r\n            return session\r\n        },\r\n  },\r\n} satisfies NextAuthConfig;","import bcrypt from 'bcryptjs';\r\n\r\nexport function hashPassword(\r\n    password: string\r\n) {\r\n    const salt = bcrypt.genSaltSync(10);\r\n    return bcrypt.hashSync(password, salt);\r\n}\r\n\r\nexport function comparePasswords(\r\n    password: string,\r\n    hash: string\r\n) {\r\n    return bcrypt.compareSync(password, hash);\r\n}","import { PrismaClient } from \"@prisma/client\";\r\n\r\ndeclare global {\r\n  var prisma: PrismaClient | undefined;\r\n}\r\n\r\nconst prisma = global.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV === \"development\") global.prisma = prisma;\r\n\r\nexport default prisma;","'use server'\r\n\r\nimport { signIn } from \"./Auth\";\r\nimport { hashPassword } from \"./Bcrypt\";\r\nimport prisma from \"./Prisma\";\r\n\r\nexport interface createAdmin {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport async function createAdmin(user: createAdmin) {\r\n    try {\r\n        await prisma.user.create({\r\n            data: {\r\n                name: user.name,\r\n                email: user.email,\r\n                password: await hashPassword(user.password),\r\n                role: \"admin\"\r\n            }\r\n        });\r\n\r\n        const response = await signIn('credentials', user);\r\n\r\n        return response;\r\n    } \r\n    catch (error: any) {\r\n        return {\r\n            error: error.message,\r\n        };\r\n    }\r\n}\r\n\r\nexport async function getUser(\r\n    email: string\r\n) {\r\n    const response = await prisma.user.findUnique({\r\n        where: {\r\n            email: email            \r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nexport async function getAdminCount() {\r\n    const response = await prisma.user.findMany({\r\n        where: {\r\n            role: \"admin\"            \r\n        }\r\n    });\r\n\r\n    return response.length;\r\n}\r\n\r\nexport interface logUserIn {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport async function logUserIn(user: logUserIn) {\r\n    try {\r\n        const response = await signIn('credentials', user);\r\n\r\n        return response;\r\n    } \r\n    catch (error: any) {\r\n        return {\r\n            error: error.message,\r\n        };\r\n    }\r\n}\r\n\r\nexport async function incrementPageViews(\r\n    slug: string\r\n) {\r\n    await prisma.views.upsert({\r\n      where: {\r\n        slug: slug\r\n      },\r\n      create: {\r\n        slug: slug,\r\n        count: 1\r\n      },\r\n      update: {\r\n        count: { increment: 1 }\r\n      }\r\n    });\r\n}","import { PutObjectCommand } from '@aws-sdk/client-s3';\r\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\r\nimport S3Client from './R2Client';\r\nimport { NextResponse } from 'next/server';\r\n\r\n/**\r\n * Save an item to CloudFlare R2.\r\n * @returns A url to access the stored item.\r\n */\r\nexport default async function Save(file: File) {\r\n    const signedUrl = await getSignedUrl(\r\n        S3Client(\r\n            process.env.R2_ACCOUNT_ID || \"\",\r\n            process.env.R2_ACCESS_KEY_ID || \"\",\r\n            process.env.R2_SECRET_ACCESS_KEY || \"\"\r\n        ),\r\n        new PutObjectCommand({\r\n            Bucket: process.env.R2_BUCKET_NAME,\r\n            ContentType: file.type,\r\n            Key: file.name,\r\n        }),\r\n        { expiresIn: 60 }\r\n    )\r\n\r\n    return NextResponse.json({ url: signedUrl });\r\n}","import { S3Client } from '@aws-sdk/client-s3';\r\n\r\n/**\r\n * The AWS S3 Client SDK Wrapper.\r\n * @returns Returns an S3 compliant client for accessing storage services such as S3 and CloudFlare R2.\r\n */\r\nexport default function R2Client(\r\n    accountID: string,\r\n    accessKeyId: string,\r\n    secretAccessKey: string,\r\n\r\n) {\r\n    return new S3Client({\r\n        region: 'auto',\r\n        endpoint: `https://${accountID}.r2.cloudflarestorage.com`,\r\n        credentials: {\r\n            accessKeyId: accessKeyId,\r\n            secretAccessKey: secretAccessKey,\r\n        },\r\n    });\r\n}"],"mappings":"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","names":["React","React","React","useEffect","Card","ElegantLogo","MetaTitle","Link","React","ArrowLongLeftIcon","title","titleId","props","svgRef","ForwardRef","ArrowLongLeftIcon_default","useRouter","Onboard","router","useEffect","MetaTitle","React","ElegantLogo","Card","data","createAdminUser","res","error","Link","ArrowLongLeftIcon_default","formData","React","useEffect","Card","ElegantLogo","MetaTitle","Link","Welcome","postgresUrl","nonPoolingPUrl","useEffect","MetaTitle","React","ElegantLogo","Card","Link","ArrowLongLeftIcon_default","React","useEffect","useState","Card","ElegantLogo","MetaTitle","Link","useRouter","NextAuth","authConfig","token","user","session","GitHubProvider","Credentials","z","string","bcrypt","comparePasswords","password","hash","bcrypt","handlers","auth","signIn","signOut","NextAuth","authConfig","GitHubProvider","profile","Credentials","credentials","parsedCredentials","z","string","email","password","user","getUser","passwordsMatch","comparePasswords","PrismaClient","prisma","Prisma_default","getUser","email","Prisma_default","getAdminCount","logUserIn","user","signIn","error","XCircleIcon","Login","router","useRouter","error","setError","useState","useEffect","MetaTitle","React","ElegantLogo","Card","data","email","password","logUserIn","res","Link","ArrowLongLeftIcon_default","CmsClient","postgresUrl","nonPoolingPUrl","adminCount","session","params","React","Welcome","Onboard","Login","CMS","postgresUrl","nonPoolingPUrl","params","adminCount","getAdminCount","React","CmsClient","PutObjectCommand","getSignedUrl","S3Client","R2Client","accountID","accessKeyId","secretAccessKey","NextResponse","Save","file","signedUrl","getSignedUrl","R2Client","PutObjectCommand"]}