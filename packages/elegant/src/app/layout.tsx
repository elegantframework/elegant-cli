import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { ThemeProvider } from 'next-themes';
import "./globals.css";
import { SessionProvider } from "next-auth/react";
import clsx from "clsx";
import Analytics from "@/components/Analytics";
import VercelAnalytics from "@/components/VercelAnalytics";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  alternates: {
    types: {
      'application/rss+xml': `${process.env.NEXT_PUBLIC_APP_URL}/feeds/feed.xml`,
      'application/atom+xml': `${process.env.NEXT_PUBLIC_APP_URL}/feeds/atom.xml`,
      'application/json': `${process.env.NEXT_PUBLIC_APP_URL}/feeds/feed.json`
    },
  }
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <SessionProvider>
      <html lang="en" className="h-full" suppressHydrationWarning>
        {process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID && (
          <Analytics GA_ID={process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID || ""}/>
        )}
        <body className={clsx(
          "h-full bg-white dark:bg-slate-900 antialiased text-slate-500 dark:text-slate-400",
          inter.className
        )}>
          <ThemeProvider attribute="class">
            {children}
          </ThemeProvider>
          {process.env.VERCEL_ANALYTICS && (
            <VercelAnalytics />
          )}
        </body>
      </html>
    </SessionProvider>
  );
}
